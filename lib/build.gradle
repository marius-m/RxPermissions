apply plugin: 'com.android.library'

def siteUrl = 'https://github.com/pietroleggero/RxPermissions'
def gitUrl = 'https://github.com/pietroleggero/RxPermissions.git'

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

android {
	compileSdkVersion 27
	buildToolsVersion '27.0.3'

	defaultConfig {
		minSdkVersion 19
		targetSdkVersion 27
		versionCode 2
		version = '1.0.2'
		group = 'com.devdoo.rxpermissions'
	}
	buildTypes {
		release {
			minifyEnabled false
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
		}
	}

	compileOptions {
		sourceCompatibility JavaVersion.VERSION_1_8
		targetCompatibility JavaVersion.VERSION_1_8
	}

	testOptions.unitTests.all {
		// unitTests.returnDefaultValues = true
		// Always show the result of every unit test, even if it passes.
		testLogging {
			events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
		}
	}
}

dependencies {
	compile 'com.android.support:appcompat-v7:27.1.0'
	compile "io.reactivex:rxjava:$rxjava_version"
}

task sourcesJar(type: Jar) {
	from android.sourceSets.main.java.srcDirs
	classifier = 'sources'
}

task javadoc(type: Javadoc) {
	source = android.sourceSets.main.java.srcDirs
	classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}
artifacts {
	archives javadocJar
	archives sourcesJar
}

task findConventions << {
	println project.getConvention()
}
